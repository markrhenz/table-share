{
  "version": 3,
  "sources": ["../../../src/utils/id-generator.js", "../../../src/utils/sanitizer.js", "../../../src/utils/rate-limiter.js", "../../../src/handlers/create.js", "../../../src/handlers/view.js", "../../../src/index.js", "file:///C:/Users/markr/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "file:///C:/Users/markr/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-ckVElC/middleware-insertion-facade.js", "file:///C:/Users/markr/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/common.ts", "../bundle-ckVElC/middleware-loader.entry.ts"],
  "sourceRoot": "d:\\PROJECTS\\Spreadsheet Project\\table-share\\.wrangler\\tmp\\dev-zG612m",
  "sourcesContent": ["// Base-62 character set (a-z, A-Z, 0-9)\r\nconst BASE62_CHARS = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r\n\r\n/**\r\n * Generate a random 8-character base-62 ID\r\n * Uses Cloudflare Workers crypto API\r\n * @returns {string} Random 8-character ID\r\n * @example generateId() // Returns: \"aB3xK9mZ\"\r\n */\r\nexport function generateId() {\r\n  const bytes = new Uint8Array(8);\r\n  crypto.getRandomValues(bytes);\r\n  \r\n  let id = '';\r\n  for (let i = 0; i < 8; i++) {\r\n    id += BASE62_CHARS[bytes[i] % 62];\r\n  }\r\n  \r\n  return id;\r\n}\r\n\r\n/**\r\n * Generate a unique ID by checking KV namespace for collisions\r\n * Retries up to 3 times if collision detected\r\n * @param {KVNamespace} kvNamespace - Cloudflare KV binding\r\n * @returns {Promise<string>} Unique 8-character ID\r\n * @throws {Error} If unable to generate unique ID after max attempts\r\n */\r\nexport async function generateUniqueId(kvNamespace) {\r\n  const MAX_ATTEMPTS = 3;\r\n  \r\n  for (let attempt = 1; attempt <= MAX_ATTEMPTS; attempt++) {\r\n    const id = generateId();\r\n    \r\n    // Check if ID already exists in KV\r\n    const exists = await kvNamespace.get(id);\r\n    \r\n    if (!exists) {\r\n      return id;\r\n    }\r\n    \r\n    // Log collision (rare but possible)\r\n    console.warn(`ID collision on attempt ${attempt}/${MAX_ATTEMPTS}: ${id}`);\r\n  }\r\n  \r\n  throw new Error(`Failed to generate unique ID after ${MAX_ATTEMPTS} attempts`);\r\n}", "/**\r\n * Escape HTML special characters to prevent XSS attacks\r\n * @param {string} text - Text to escape\r\n * @returns {string} Escaped text safe for HTML\r\n */\r\nexport function escapeHtml(text) {\r\n  if (text === null || text === undefined) {\r\n    return '';\r\n  }\r\n  \r\n  const replacements = {\r\n    '&': '&',\r\n    '<': '<',\r\n    '>': '>',\r\n    '\"': '\"',\r\n    \"'\": '&#' + '39;'\r\n  };\r\n  \r\n  return String(text).replace(/[&<>\"']/g, char => replacements[char]);\r\n}\r\n\r\n/**\r\n * Sanitize a single table cell\r\n * @param {any} cell - Cell value\r\n * @returns {string} Sanitized cell content\r\n */\r\nexport function sanitizeCell(cell) {\r\n  let text = String(cell);\r\n  text = text.trim();\r\n  \r\n  if (text.length > 1000) {\r\n    text = text.substring(0, 1000) + '...';\r\n  }\r\n  \r\n  return escapeHtml(text);\r\n}\r\n\r\n/**\r\n * Validate table data\r\n * @param {Array<Array>} data - 2D array of table data\r\n * @returns {Object} {valid: boolean, error: string|null}\r\n */\r\nexport function validateInput(data) {\r\n  if (!Array.isArray(data)) {\r\n    return { valid: false, error: 'Data must be an array' };\r\n  }\r\n  \r\n  if (data.length === 0) {\r\n    return { valid: false, error: 'Data cannot be empty' };\r\n  }\r\n  \r\n  if (data.length > 1000) {\r\n    return { valid: false, error: 'Too many rows (max 1000)' };\r\n  }\r\n  \r\n  for (let i = 0; i < data.length; i++) {\r\n    if (!Array.isArray(data[i])) {\r\n      return { valid: false, error: `Row ${i} is not an array` };\r\n    }\r\n    \r\n    if (data[i].length > 100) {\r\n      return { valid: false, error: `Row ${i} has too many columns (max 100)` };\r\n    }\r\n  }\r\n  \r\n  const jsonSize = JSON.stringify(data).length;\r\n  if (jsonSize > 51200) {\r\n    return { valid: false, error: 'Data too large (max 50KB)' };\r\n  }\r\n  \r\n  return { valid: true, error: null };\r\n}\r\n\r\n/**\r\n * Detect malicious content patterns\r\n * @param {string} text - Text to check\r\n * @returns {boolean} True if malicious\r\n */\r\nexport function detectMaliciousContent(text) {\r\n  const maliciousPatterns = [\r\n    /<script/i,\r\n    /javascript:/i,\r\n    /data:/i,\r\n    /on\\w+=/i,\r\n    /<iframe/i,\r\n    /eval\\(/i,\r\n    /expression\\(/i\r\n  ];\r\n  \r\n  return maliciousPatterns.some(pattern => pattern.test(text));\r\n}", "/**\r\n * Generate a rate limit key for KV storage\r\n * Key format: 'rate-limit:{ip}:{minute}'\r\n * @param {string} ip - Client IP address\r\n * @returns {string} KV key for rate limiting\r\n * @example getRateLimitKey('192.168.1.1') \r\n * // Returns: 'rate-limit:192.168.1.1:29847123'\r\n */\r\nexport function getRateLimitKey(ip) {\r\n  // Get current minute timestamp\r\n  const minute = Math.floor(Date.now() / 60000);\r\n  return `rate-limit:${ip}:${minute}`;\r\n}\r\n\r\n/**\r\n * Check if IP is whitelisted (development/localhost)\r\n * @param {string|null} ip - Client IP address\r\n * @returns {boolean} True if IP is whitelisted\r\n */\r\nexport function isWhitelisted(ip) {\r\n  if (!ip) return true; // Allow if no IP (development)\r\n  \r\n  const whitelist = [\r\n    '127.0.0.1',     // IPv4 localhost\r\n    '::1',           // IPv6 localhost\r\n    'localhost'\r\n  ];\r\n  \r\n  return whitelist.includes(ip);\r\n}\r\n\r\n/**\r\n * Check and enforce rate limit for an IP address\r\n * Uses KV storage with 60-second TTL\r\n * @param {KVNamespace} kvNamespace - Cloudflare KV binding\r\n * @param {string} ip - Client IP address\r\n * @param {number} maxRequests - Max requests per minute (default: 5)\r\n * @returns {Promise<Object>} {allowed: boolean, remaining: number}\r\n */\r\nexport async function checkRateLimit(kvNamespace, ip, maxRequests = 5) {\r\n  // Whitelist localhost/development\r\n  if (isWhitelisted(ip)) {\r\n    return { allowed: true, remaining: maxRequests };\r\n  }\r\n  \r\n  try {\r\n    const key = getRateLimitKey(ip);\r\n    \r\n    // Get current count from KV\r\n    const countStr = await kvNamespace.get(key);\r\n    const count = countStr ? parseInt(countStr, 10) : 0;\r\n    \r\n    // Check if limit exceeded\r\n    if (count >= maxRequests) {\r\n      return { allowed: false, remaining: 0 };\r\n    }\r\n    \r\n    // Increment counter with 60-second expiration\r\n    const newCount = count + 1;\r\n    await kvNamespace.put(key, String(newCount), { expirationTtl: 60 });\r\n    \r\n    return { \r\n      allowed: true, \r\n      remaining: maxRequests - newCount \r\n    };\r\n    \r\n  } catch (error) {\r\n    // Fail open - allow request if KV operation fails\r\n    console.error('Rate limit check failed:', error);\r\n    return { allowed: true, remaining: maxRequests };\r\n  }\r\n}", "import { generateUniqueId } from '../utils/id-generator.js';\r\nimport { validateInput, sanitizeCell, detectMaliciousContent } from '../utils/sanitizer.js';\r\nimport { checkRateLimit } from '../utils/rate-limiter.js';\r\n\r\nexport async function handleCreate(request, env) {\r\n  try {\r\n    // 1. Extract IP\r\n    const ip = request.headers.get('CF-Connecting-IP') || '127.0.0.1';\r\n\r\n    // 2. Check rate limit\r\n    const rateCheck = await checkRateLimit(env.TABLES, ip, 5);\r\n    if (!rateCheck.allowed) {\r\n      return new Response(JSON.stringify({ error: 'Too many requests' }), {\r\n        status: 429,\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n    }\r\n\r\n    // 3. Parse body\r\n    const { data, honeypot } = await request.json();\r\n\r\n    // 4. Honeypot check\r\n    if (honeypot) {\r\n      return new Response(JSON.stringify({ error: 'Invalid submission' }), {\r\n        status: 400,\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n    }\r\n\r\n    // 5. Validate input\r\n    const validation = validateInput(data);\r\n    if (!validation.valid) {\r\n      return new Response(JSON.stringify({ error: validation.error }), {\r\n        status: 400,\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n    }\r\n\r\n    // 6. Sanitize all cells\r\n    const sanitizedData = data.map(row => row.map(cell => sanitizeCell(cell)));\r\n\r\n    // 7. Check malicious content in all cells\r\n    for (const row of sanitizedData) {\r\n      for (const cell of row) {\r\n        if (detectMaliciousContent(cell)) {\r\n          return new Response(JSON.stringify({ error: 'Invalid content' }), {\r\n            status: 400,\r\n            headers: { 'Content-Type': 'application/json' }\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    // 8. Generate ID\r\n    const id = await generateUniqueId(env.TABLES);\r\n\r\n    // 9. Store in KV\r\n    const tableData = {\r\n      data: sanitizedData,\r\n      createdAt: new Date().toISOString(),\r\n      rowCount: sanitizedData.length,\r\n      colCount: sanitizedData[0]?.length || 0\r\n    };\r\n    await env.TABLES.put(id, JSON.stringify(tableData), { expirationTtl: 2592000 });\r\n\r\n    // 10. Return success\r\n    const url = `${new URL(request.url).origin}/t/${id}`;\r\n    return new Response(JSON.stringify({ id, url }), {\r\n      status: 201,\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n\r\n  } catch (error) {\r\n    return new Response(JSON.stringify({ error: 'Internal server error' }), {\r\n      status: 500,\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n  }\r\n}", "import { sanitizeCell } from '../utils/sanitizer.js';\r\n\r\n// Placeholder for template replacement to avoid JavaScript template literal interpolation issues\r\nconst TABLE_ID_PLACEHOLDER = '__TABLE_ID__';\r\n\r\nconst VIEW_TEMPLATE = `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <title>{{TABLE_TITLE}} - Table Share</title>\r\n  <style>\r\n    * { margin: 0; padding: 0; box-sizing: border-box; }\r\n    \r\n    body {\r\n      font-family: system-ui, -apple-system, sans-serif;\r\n      max-width: 900px;\r\n      margin: 40px auto;\r\n      padding: 20px;\r\n      background: #fff;\r\n      color: #000;\r\n      line-height: 1.5;\r\n    }\r\n    \r\n    table {\r\n      width: 100%;\r\n      border: 2px solid #000;\r\n      border-collapse: collapse;\r\n      margin: 20px 0;\r\n    }\r\n    \r\n    th {\r\n      background: #F5F5F5;\r\n      border: 1px solid #000;\r\n      padding: 10px;\r\n      text-align: left;\r\n      font-weight: 600;\r\n    }\r\n    \r\n    td {\r\n      border: 1px solid #ccc;\r\n      padding: 10px;\r\n    }\r\n    \r\n    .download-link {\r\n      display: inline-block;\r\n      margin: 20px 0;\r\n      color: #0066CC;\r\n      text-decoration: none;\r\n    }\r\n    \r\n    .download-link:hover {\r\n      text-decoration: underline;\r\n    }\r\n    \r\n    footer {\r\n      margin-top: 40px;\r\n      padding-top: 20px;\r\n      border-top: 1px solid #ccc;\r\n      text-align: center;\r\n      font-size: 12px;\r\n      color: #666;\r\n    }\r\n    \r\n    footer a {\r\n      color: #0066CC;\r\n      text-decoration: none;\r\n      margin: 0 10px;\r\n    }\r\n    \r\n    footer a:hover {\r\n      text-decoration: underline;\r\n    }\r\n  </style>\r\n</head>\r\n<body>\r\n  <div class=\"meta\">{{TABLE_META}}</div>\r\n  {{TABLE_HTML}}\r\n  \r\n  <a href=\"#\" class=\"download-link\" onclick=\"downloadCSV(); return false;\">\uD83D\uDCE5 Download CSV</a>\r\n  \r\n  <footer>\r\n    Created with <a href=\"/\">Table Share</a> \u2022 Expires: {{EXPIRES_AT}}\r\n  </footer>\r\n  \r\n  <script>\r\n    function downloadCSV() {\r\n      var table = document.querySelector('table');\r\n      if (!table) {\r\n        alert('No table found');\r\n        return;\r\n      }\r\n      \r\n      var rows = table.querySelectorAll('tr');\r\n      var csv = [];\r\n      \r\n      rows.forEach(function(row) {\r\n        var cells = row.querySelectorAll('th, td');\r\n        var rowData = [];\r\n        cells.forEach(function(cell) {\r\n          var text = cell.textContent.trim();\r\n          if (text.indexOf(',') !== -1 || text.indexOf('\"') !== -1) {\r\n            text = '\"' + text.split('\"').join('\"\"') + '\"';\r\n          }\r\n          rowData.push(text);\r\n        });\r\n        csv.push(rowData.join(','));\r\n      });\r\n      \r\n      var csvContent = csv.join('\\n');\r\n      var blob = new Blob([csvContent], {type: 'text/csv'});\r\n      var url = window.URL.createObjectURL(blob);\r\n      var a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = 'table-{{TABLE_ID}}.csv';\r\n      a.click();\r\n      window.URL.revokeObjectURL(url);\r\n    }\r\n  </script>\r\n</body>\r\n</html>`;\r\n\r\nexport async function handleView(request, env, id) {\r\n  console.log('handleView called with id:', id);\r\n  try {\r\n    // Validate ID format\r\n    if (!/^[a-zA-Z0-9]{8}$/.test(id)) {\r\n      console.log('Invalid ID format');\r\n      return new Response('Not Found', { status: 404 });\r\n    }\r\n\r\n    // Fetch from KV\r\n    console.log('Fetching from KV for id:', id);\r\n    const dataStr = await env.TABLES.get(id);\r\n    console.log('KV get result:', dataStr);\r\n    if (!dataStr) {\r\n      console.log('No data found in KV');\r\n      return new Response(`\r\n        <!DOCTYPE html>\r\n        <html>\r\n        <head><title>Table Not Found</title></head>\r\n        <body style=\"font-family: sans-serif; text-align: center; padding: 50px;\">\r\n          <h1>Table Not Found</h1>\r\n          <p>The table you're looking for doesn't exist or has expired.</p>\r\n          <a href=\"/\">Create a new table</a>\r\n        </body>\r\n        </html>\r\n      `, { status: 404, headers: { 'Content-Type': 'text/html' } });\r\n    }\r\n\r\n    // Parse JSON\r\n    console.log('Parsing JSON');\r\n    const tableData = JSON.parse(dataStr);\r\n    console.log('Parsed data:', tableData);\r\n    const { data, createdAt, rowCount, colCount } = tableData;\r\n\r\n    // Generate HTML table\r\n    let tableHtml = '<table>';\r\n    if (data.length > 0) {\r\n      // First row as thead\r\n      tableHtml += '<thead><tr>';\r\n      data[0].forEach(cell => {\r\n        tableHtml += `<th>${sanitizeCell(cell)}</th>`;\r\n      });\r\n      tableHtml += '</tr></thead>';\r\n\r\n      // Rest as tbody\r\n      tableHtml += '<tbody>';\r\n      for (let i = 1; i < data.length; i++) {\r\n        tableHtml += '<tr>';\r\n        data[i].forEach(cell => {\r\n          tableHtml += `<td>${sanitizeCell(cell)}</td>`;\r\n        });\r\n        tableHtml += '</tr>';\r\n      }\r\n      tableHtml += '</tbody>';\r\n    }\r\n    tableHtml += '</table>';\r\n\r\n    // Calculate expiration date (30 days from createdAt)\r\n    const createdDate = new Date(createdAt);\r\n    const expiresDate = new Date(createdDate.getTime() + 30 * 24 * 60 * 60 * 1000);\r\n    const expiresAt = expiresDate.toISOString().split('T')[0];\r\n\r\n    // Replace placeholders\r\n    console.log('Replacing placeholders in template');\r\n    let html = VIEW_TEMPLATE\r\n      .replace(/{{TABLE_TITLE}}/g, `Table ${id}`)\r\n      .replace(/{{TABLE_META}}/g, `${rowCount} rows \u00D7 ${colCount} columns`)\r\n      .replace(/{{TABLE_HTML}}/g, tableHtml)\r\n      .replace(/{{EXPIRES_AT}}/g, expiresAt)\r\n      .replace(/{{TABLE_ID}}/g, id);\r\n\r\n    console.log('Generating response');\r\n    return new Response(html, {\r\n      status: 200,\r\n      headers: {\r\n        'Content-Type': 'text/html',\r\n        'Cache-Control': 'public, max-age=3600'\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error in handleView:', error);\r\n    return new Response('Internal Server Error', { status: 500 });\r\n  }\r\n}", "import { handleCreate } from './handlers/create.js';\r\nimport { handleView } from './handlers/view.js';\r\n\r\nconst INDEX_HTML = `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <title>Table Share</title>\r\n  <style>\r\n    * { margin: 0; padding: 0; box-sizing: border-box; }\r\n\r\n    body {\r\n      font-family: system-ui, -apple-system, sans-serif;\r\n      max-width: 700px;\r\n      margin: 40px auto;\r\n      padding: 20px;\r\n      background: #fff;\r\n      color: #000;\r\n      line-height: 1.5;\r\n    }\r\n\r\n    h1 {\r\n      font-size: 24px;\r\n      font-weight: normal;\r\n      margin-bottom: 8px;\r\n    }\r\n\r\n    .tagline {\r\n      font-size: 14px;\r\n      color: #666;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    #dataInput {\r\n      width: 100%;\r\n      height: 300px;\r\n      font-family: Consolas, Monaco, monospace;\r\n      font-size: 14px;\r\n      border: 2px solid #000;\r\n      padding: 10px;\r\n      margin-bottom: 10px;\r\n    }\r\n\r\n    #generateBtn {\r\n      background: #0066CC;\r\n      color: #fff;\r\n      border: none;\r\n      padding: 12px 24px;\r\n      font-size: 16px;\r\n      cursor: pointer;\r\n      display: none;\r\n    }\r\n\r\n    #status {\r\n      color: #228B22;\r\n      margin-top: 10px;\r\n      display: none;\r\n    }\r\n\r\n    #status.show { display: block; }\r\n\r\n    footer {\r\n      margin-top: 40px;\r\n      padding-top: 20px;\r\n      border-top: 1px solid #ccc;\r\n      text-align: center;\r\n      font-size: 12px;\r\n      color: #666;\r\n    }\r\n\r\n    footer a {\r\n      color: #0066CC;\r\n      text-decoration: none;\r\n    }\r\n  </style>\r\n</head>\r\n<body>\r\n  <h1>Table Share</h1>\r\n  <p class=\"tagline\">Paste your table. Get a link.</p>\r\n\r\n  <textarea id=\"dataInput\" placeholder=\"Paste your table here (from Excel, Sheets, or CSV)\"></textarea>\r\n\r\n  <button id=\"generateBtn\">Generate Link</button>\r\n\r\n  <div id=\"status\"></div>\r\n\r\n  <footer>\r\n    Created with <a href=\"/\">Table Share</a>\r\n  </footer>\r\n\r\n  <!-- Honeypot for bot detection -->\r\n  <input type=\"text\" name=\"website\" id=\"website\" style=\"position:absolute;left:-9999px;\" tabindex=\"-1\" autocomplete=\"off\" aria-hidden=\"true\">\r\n\r\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/PapaParse/5.4.1/papaparse.min.js\"></script>\r\n\r\n  <script>\r\n    const dataInput = document.getElementById('dataInput');\r\n    const generateBtn = document.getElementById('generateBtn');\r\n    const status = document.getElementById('status');\r\n\r\n    // Show button on paste\r\n    dataInput.addEventListener('paste', () => {\r\n      setTimeout(() => {\r\n        if (dataInput.value.trim()) {\r\n          generateBtn.style.display = 'block';\r\n        }\r\n      }, 100);\r\n    });\r\n\r\n    // Process on button click\r\n    generateBtn.addEventListener('click', processData);\r\n\r\n    async function processData() {\r\n      const rawData = dataInput.value.trim();\r\n\r\n      if (!rawData) return;\r\n\r\n      // Check honeypot\r\n      if (document.getElementById('website').value) {\r\n        showError('Invalid submission detected');\r\n        return;\r\n      }\r\n\r\n      // Show loading\r\n      status.textContent = 'Generating your link...';\r\n      status.classList.add('show');\r\n      generateBtn.style.display = 'none';\r\n\r\n      // Parse with PapaParse\r\n      const parsed = Papa.parse(rawData, {\r\n        delimiter: '',\r\n        skipEmptyLines: true,\r\n        dynamicTyping: true\r\n      });\r\n\r\n      if (parsed.errors.length > 0) {\r\n        showError('Could not parse data. Please check formatting.');\r\n        return;\r\n      }\r\n\r\n      if (parsed.data.length === 0) {\r\n        showError('No data found to share.');\r\n        return;\r\n      }\r\n\r\n      // Send to API\r\n      try {\r\n        const response = await fetch('/api/create', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            data: parsed.data,\r\n            honeypot: document.getElementById('website').value\r\n          })\r\n        });\r\n\r\n        const result = await response.json();\r\n\r\n        if (!response.ok) {\r\n          throw new Error(result.error || 'Failed to create table');\r\n        }\r\n\r\n        // Copy to clipboard\r\n        await navigator.clipboard.writeText(result.url);\r\n\r\n        // Show success\r\n        showSuccess('\u2713 Link copied!');\r\n\r\n        // Clear after 3 seconds\r\n        setTimeout(() => {\r\n          status.classList.remove('show');\r\n        }, 3000);\r\n\r\n      } catch (error) {\r\n        showError(error.message);\r\n      }\r\n    }\r\n\r\n    function showSuccess(message) {\r\n      status.textContent = message;\r\n      status.classList.add('show');\r\n    }\r\n\r\n    function showError(message) {\r\n      status.textContent = message;\r\n      status.classList.add('show');\r\n      generateBtn.style.display = 'block';\r\n    }\r\n  </script>\r\n</body>\r\n</html>`;\r\n\r\n// CORS headers\r\nconst corsHeaders = {\r\n  'Access-Control-Allow-Origin': '*',\r\n  'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\r\n  'Access-Control-Allow-Headers': 'Content-Type',\r\n  'Access-Control-Max-Age': '86400'\r\n};\r\n\r\nexport default {\r\n  async fetch(request, env, ctx) {\r\n    try {\r\n      const url = new URL(request.url);\r\n      const pathname = url.pathname;\r\n\r\n      // Handle OPTIONS preflight\r\n      if (request.method === 'OPTIONS') {\r\n        return new Response(null, {\r\n          status: 204,\r\n          headers: corsHeaders\r\n        });\r\n      }\r\n\r\n      // Routes\r\n      if (pathname === '/') {\r\n        return new Response(INDEX_HTML, {\r\n          headers: {\r\n            'Content-Type': 'text/html',\r\n            ...corsHeaders\r\n          }\r\n        });\r\n      } else if (pathname === '/api/create' && request.method === 'POST') {\r\n        const response = await handleCreate(request, env);\r\n        return new Response(response.body, {\r\n          ...response,\r\n          headers: {\r\n            ...response.headers,\r\n            ...corsHeaders\r\n          }\r\n        });\r\n      } else if (pathname.startsWith('/t/') && pathname.length === 11) {\r\n        const id = pathname.slice(3);\r\n        if (/^[a-zA-Z0-9]{8}$/.test(id)) {\r\n          const response = await handleView(request, env, id);\r\n          return new Response(response.body, {\r\n            ...response,\r\n            headers: {\r\n              ...response.headers,\r\n              ...corsHeaders\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      // Default 404\r\n      return new Response('Not Found', {\r\n        status: 404,\r\n        headers: corsHeaders\r\n      });\r\n\r\n    } catch (error) {\r\n      return new Response('Internal Server Error', {\r\n        status: 500,\r\n        headers: corsHeaders\r\n      });\r\n    }\r\n  }\r\n};", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"d:\\\\PROJECTS\\\\Spreadsheet Project\\\\table-share\\\\src\\\\index.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\markr\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\markr\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"d:\\\\PROJECTS\\\\Spreadsheet Project\\\\table-share\\\\src\\\\index.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"d:\\\\PROJECTS\\\\Spreadsheet Project\\\\table-share\\\\.wrangler\\\\tmp\\\\bundle-ckVElC\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\markr\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"d:\\\\PROJECTS\\\\Spreadsheet Project\\\\table-share\\\\.wrangler\\\\tmp\\\\bundle-ckVElC\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"d:\\\\PROJECTS\\\\Spreadsheet Project\\\\table-share\\\\.wrangler\\\\tmp\\\\bundle-ckVElC\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": []
}
